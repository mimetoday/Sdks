package Utils;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;

import com.google.gson.Gson;

import DataContracts.OperationMessage;
import DataContracts.ProcessAuthenticationIn;
import DataContracts.ProcessAuthenticationOut;

public class HttpPost {
	
	public static ProcessAuthenticationOut send(String url, ProcessAuthenticationIn req){
		ProcessAuthenticationOut result = new ProcessAuthenticationOut();
		
		try {
			Gson g = new Gson();
			TrustAllSSLProtocolSocketFactory.initialize();
            HttpClient client = new HttpClient();
            PostMethod post = new PostMethod(url);
        	post.addRequestHeader("content-type", "application/json");
        	post.addRequestHeader("data-type", "json");
        	
        	String requestString = g.toJson(req);
        	
        	StringRequestEntity requestEntity = new StringRequestEntity(
        			requestString,
        		    "application/json",
        		    "UTF-8");
        	post.setRequestEntity(requestEntity);
        	
            int statusCode = client.executeMethod(post);
            if (statusCode != -1) {
            	String response = post.getResponseBodyAsString(); 
            	result = g.fromJson(response, ProcessAuthenticationOut.class);
            	return result;
            }
            result.OperationMessage = new OperationMessage("", "Internal error");
        } 
        catch (Exception e) {
        	result = new ProcessAuthenticationOut();
            result.OperationMessage = new OperationMessage(e.toString(), "Internal error");
        }
		return null;
	}
	
} 
